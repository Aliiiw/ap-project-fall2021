
import com.mysql.jdbc.Connection;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Amirhossein zamani
 */
public class AllMyPost extends javax.swing.JFrame {

    /**
     * Creates new form AllMyPost
     */
    public AllMyPost() {
        initComponents();
        
        try {
            
            Class.forName("com.mysql.jdbc.Driver");            
            Connection connector = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/instagram?autoReconnect=true&useSSL=false", "root", ""); 
            String sqlOrder = "SELECT text,date FROM post WHERE username = ? ORDER BY date DESC";
            PreparedStatement preparedStatement = connector.prepareStatement(sqlOrder);         
            preparedStatement.setString(1, Login.usernameHelper);
            ResultSet resultSet = preparedStatement.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            
            
            while(table.getRowCount() > 0){                             //remove all thing in that 
                model.removeRow(0);
            }
            
            while(resultSet.next()){
                model.addRow(new Object[]{resultSet.getString("text"), resultSet.getString("date")});
            }
            connector.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonnewpost = new javax.swing.JButton();
        buttondeletepost = new javax.swing.JButton();
        buttonrefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setTitle("My Posts");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        buttonnewpost.setBackground(new java.awt.Color(255, 255, 255));
        buttonnewpost.setText("New post");
        buttonnewpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonnewpostActionPerformed(evt);
            }
        });

        buttondeletepost.setBackground(new java.awt.Color(255, 255, 255));
        buttondeletepost.setText("Delete post");
        buttondeletepost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttondeletepostActionPerformed(evt);
            }
        });

        buttonrefresh.setBackground(new java.awt.Color(255, 255, 255));
        buttonrefresh.setText("Refresh");
        buttonrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonrefreshActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Caption", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(buttonrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(buttonnewpost, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(buttondeletepost)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttondeletepost)
                    .addComponent(buttonnewpost)
                    .addComponent(buttonrefresh))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonrefreshActionPerformed
        
        AllMyPost allMyPost = new AllMyPost();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        allMyPost.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        allMyPost.show();
        this.hide();
    }//GEN-LAST:event_buttonrefreshActionPerformed

    private void buttonnewpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonnewpostActionPerformed
        
        NewPost newPost = new NewPost();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        newPost.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        newPost.show();
    }//GEN-LAST:event_buttonnewpostActionPerformed

    private void buttondeletepostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttondeletepostActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        int selectRow = table.getSelectedRow();
        String dateHelper = model.getValueAt(selectRow, 1).toString();
       
        try {
            Class.forName("com.mysql.jdbc.Driver");             //connect to database from localhost
            Connection connector = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/instagram?autoReconnect=true&useSSL=false", "root", ""); 
            String sqlOrder = "DELETE FROM post WHERE username = ? AND date = ?";
            PreparedStatement preparedStatement = connector.prepareStatement(sqlOrder);         //ready to run
            preparedStatement.setString(1, Login.usernameHelper);
            preparedStatement.setString(2, dateHelper);
            preparedStatement.executeUpdate();
            AllMyPost allMyPost = new AllMyPost();
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
            allMyPost.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
            allMyPost.show();
            this.hide();
            
            connector.close();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error!");
        }
    }//GEN-LAST:event_buttondeletepostActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllMyPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllMyPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllMyPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllMyPost.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllMyPost().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttondeletepost;
    private javax.swing.JButton buttonnewpost;
    private javax.swing.JButton buttonrefresh;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
